{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","entity_id","_getStates","hass","domainFilter","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","value","updated","changedProps","has","this","_opened","_hass","render","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","type","Boolean","attribute","customElements","define","HaEntityPicker","struct","types","includes","icon","configElementStyle","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","newEntities","splice","HuiEntityEditor","processEditorEntities","listEntry","inputLabel","_consolidateEntries","_removeEntry","_addEntry","newEntries","blur","stopPropagation","parent","currentTarget","parentElement","HuiInputListEditor","entitiesConfigStruct","union","name","cardConfigStruct","title","aspect_ratio","default_zoom","dark_mode","geo_location_sources","setConfig","config","_config","_configEntities","NaN","_title","_aspect_ratio","_default_zoom","_dark_mode","_entitiesValueChanged","_geo_location_sources","configValue","isNaN","Number","checked","HuiMapCardEditor"],"mappings":"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","file":"chunk.9a406b7b71e8ef4ca707.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Aspect Ratio\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            label=\"Default Zoom\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <paper-toggle-button\n          ?checked=\"${this._dark_mode !== false}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >Dark Mode?</paper-toggle-button\n        >\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>Geolocation Sources</h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=\"Source\"\n            .hass=\"${this.hass}\"\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (\n      target.configValue &&\n      ev.detail &&\n      this[`_${target.configValue}`] === ev.detail.value\n    ) {\n      return;\n    }\n    if (target.configValue && ev.detail) {\n      if (\n        ev.detail.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(ev.detail.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = ev.detail.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}