{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/lovelace/components/hui-action-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-picture-card-editor.ts"],"names":["struct","types","value","includes","icon","configElementStyle","customElements","define","allowCustomValue","Boolean","items","type","Object","observer","_items","itemLabelPath","String","itemValuePath","autofocus","label","opened","notify","newVal","this","item","ev","stopPropagation","fire","hass","_services","Array","oldHass","services","result","keys","sort","forEach","domain","i","length","push","config","action","navigation_path","service","render","actions","_valueChanged","indexOf","_action","map","_navigation_path","_service","target","configValue","HuiActionEditor","actionConfigStruct","service_data","cardConfigStruct","image","tap_action","optional","hold_action","setConfig","_config","_image","_tap_action","_hold_action","HuiPictureCardEditor"],"mappings":"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","file":"chunk.ae271b062f856c713266.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\n\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-input > paper-icon-button {\n          width: 24px;\n          height: 24px;\n          padding: 2px;\n          color: var(--secondary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-light\n        items=\"[[_items]]\"\n        item-value-path=\"[[itemValuePath]]\"\n        item-label-path=\"[[itemLabelPath]]\"\n        value=\"{{value}}\"\n        opened=\"{{opened}}\"\n        allow-custom-value=\"[[allowCustomValue]]\"\n        on-change=\"_fireChanged\"\n      >\n        <paper-input\n          autofocus=\"[[autofocus]]\"\n          label=\"[[label]]\"\n          class=\"input\"\n          value=\"[[value]]\"\n        >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"clear-button\"\n            icon=\"hass:close\"\n            hidden$=\"[[!value]]\"\n            >Clear</paper-icon-button\n          >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            icon=\"[[_computeToggleIcon(opened)]]\"\n            hidden$=\"[[!items.length]]\"\n            >Toggle</paper-icon-button\n          >\n        </paper-input>\n        <template>\n          <style>\n            paper-item {\n              margin: -5px -10px;\n              padding: 0;\n            }\n          </style>\n          <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n        </template>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: \"_itemsChanged\",\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: \"_openedChanged\",\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? \"hass:menu-up\" : \"hass:menu-down\";\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire(\"change\");\n  }\n}\n\ncustomElements.define(\"ha-combo-box\", HaComboBox);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-combo-box\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-combo-box\n        label=\"[[localize('ui.components.service-picker.service')]]\"\n        items=\"[[_services]]\"\n        value=\"{{value}}\"\n        allow-custom-value=\"\"\n      ></ha-combo-box>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"_hassChanged\",\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    }\n    if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services)\n      .sort()\n      .forEach((domain) => {\n        const services = Object.keys(hass.services[domain]).sort();\n\n        for (let i = 0; i < services.length; i++) {\n          result.push(`${domain}.${services[i]}`);\n        }\n      });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define(\"ha-service-picker\", HaServicePicker);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../components/ha-service-picker\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { EditorTarget } from \"../editor/types\";\nimport {\n  ActionConfig,\n  NavigateActionConfig,\n  CallServiceActionConfig,\n} from \"../../../data/lovelace\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"action-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"action-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-action-editor\")\nexport class HuiActionEditor extends LitElement {\n  @property() public config?: ActionConfig;\n\n  @property() public label?: string;\n\n  @property() public actions?: string[];\n\n  @property() protected hass?: HomeAssistant;\n\n  get _action(): string {\n    return this.config!.action || \"\";\n  }\n\n  get _navigation_path(): string {\n    const config = this.config! as NavigateActionConfig;\n    return config.navigation_path || \"\";\n  }\n\n  get _service(): string {\n    const config = this.config! as CallServiceActionConfig;\n    return config.service || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.actions) {\n      return html``;\n    }\n    return html`\n      <paper-dropdown-menu\n        .label=\"${this.label}\"\n        .configValue=\"${\"action\"}\"\n        @value-changed=\"${this._valueChanged}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.actions.indexOf(this._action)}\"\n        >\n          ${this.actions.map((action) => {\n            return html`\n              <paper-item>${action}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n      ${this._action === \"navigate\"\n        ? html`\n            <paper-input\n              label=\"Navigation Path\"\n              .value=\"${this._navigation_path}\"\n              .configValue=\"${\"navigation_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this.config && this.config.action === \"call-service\"\n        ? html`\n            <ha-service-picker\n              .hass=\"${this.hass}\"\n              .value=\"${this._service}\"\n              .configValue=\"${\"service\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></ha-service-picker>\n            <h3>Toggle Editor to input Service Data</h3>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    if (!this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (\n      this.config &&\n      this.config[this[`${target.configValue}`]] === target.value\n    ) {\n      return;\n    }\n    if (target.configValue === \"action\") {\n      this.config = { action: \"none\" };\n    }\n    if (target.configValue) {\n      this.config = { ...this.config!, [target.configValue!]: target.value };\n      fireEvent(this, \"action-changed\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-action-editor\": HuiActionEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-action-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  actionConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { PictureCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  image: \"string?\",\n  tap_action: struct.optional(actionConfigStruct),\n  hold_action: struct.optional(actionConfigStruct),\n});\n\n@customElement(\"hui-picture-card-editor\")\nexport class HuiPictureCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: PictureCardConfig;\n\n  public setConfig(config: PictureCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _image(): string {\n    return this._config!.image || \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"none\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"none\" };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const actions = [\"navigate\", \"call-service\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Image Url\"\n          .value=\"${this._image}\"\n          .configValue=\"${\"image\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            label=\"Tap Action\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._tap_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"tap_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-action-editor\n            label=\"Hold Action\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._hold_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"hold_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (\n      this[`_${target.configValue}`] === target.value ||\n      this[`_${target.configValue}`] === target.config\n    ) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value ? target.value : target.config,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-card-editor\": HuiPictureCardEditor;\n  }\n}\n"],"sourceRoot":""}