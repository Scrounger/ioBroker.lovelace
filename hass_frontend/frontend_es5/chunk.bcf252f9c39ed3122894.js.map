{"version":3,"sources":["webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["setupLeafletMap","mapElement","darkMode","parentNode","Error","Leaflet","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","createTileLayer","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","saveCoreConfig","hass","values","callWS","type","detectCoreConfig","createTimezoneListEl","list","id","Object","keys","forEach","key","option","value","innerHTML","fitZoom","fitMap","this","_leafletMap","location","render","firstUpdated","changedProps","_initMap","updated","_updateMarker","_ignoreFitToMap","undefined","shadowRoot","querySelector","_mapEl","addEventListener","ev","_updateLocation","latlng","invalidateSize","lat","lng","bubbles","_locationMarker","setLatLng","marker","draggable","target","getLatLng","addLayer","remove","LocationEditor","amsterdam","_working","onboardingLocalize","user","name","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystemValue","_unitSystemChanged","_save","setTimeout","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","_unitSystem","currentTarget","detail","latitude","longitude","Number","elevation","String","unit_system","time_zone","alert","message","preventDefault","location_name","result","OnboardingCoreConfig"],"mappings":"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","file":"chunk.bcf252f9c39ed3122894.js","sourcesContent":["import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(/* webpackChunkName: \"leaflet\" */ \"leaflet\")) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport { Marker, Map, LeafletMouseEvent, DragEndEvent, LatLng } from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  public fitZoom = 16;\n\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    this._leafletMap.setView(this.location, this.fitZoom);\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    this._updateMarker();\n    if (!this._ignoreFitToMap || this._ignoreFitToMap !== this.location) {\n      this.fitMap();\n    }\n    this._ignoreFitToMap = undefined;\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(this._mapEl);\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._updateLocation(ev.latlng)\n    );\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _updateLocation(latlng: LatLng) {\n    this.location = this._ignoreFitToMap = [latlng.lat, latlng.lng];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateMarker(): void {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      return;\n    }\n    this._locationMarker = this.Leaflet!.marker(this.location, {\n      draggable: true,\n    });\n    this._locationMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._updateLocation(ev.target.getLatLng())\n    );\n    this._leafletMap!.addLayer(this._locationMarker);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n            )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(\"FAIL\");\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}