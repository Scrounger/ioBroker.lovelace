{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-gauge-card-editor.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","entity_id","_getStates","hass","domainFilter","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","value","updated","changedProps","has","this","_opened","_hass","render","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","type","Boolean","attribute","customElements","define","HaEntityPicker","struct","types","includes","icon","configElementStyle","themes","concat","_changed","theme","target","HuiThemeSelectEditor","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","newConfigEntities","newEntities","splice","HuiEntityEditor","cardConfigStruct","name","unit","min","max","severity","setConfig","config","_useSeverity","_config","number","_name","_entity","_unit","_theme","_min","_max","_toggleSeverity","_severity","green","_severityChanged","yellow","red","checked","configValue","Number","isNaN","HuiGaugeCardEditor"],"mappings":"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","file":"chunk.fbe167b97edc316b6416.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        label=\"Theme\"\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GaugeCardConfig, SeverityConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  name: \"string?\",\n  entity: \"string?\",\n  unit: \"string?\",\n  min: \"number?\",\n  max: \"number?\",\n  severity: \"object?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-gauge-card-editor\")\nexport class HuiGaugeCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GaugeCardConfig;\n\n  private _useSeverity?: boolean;\n\n  public setConfig(config: GaugeCardConfig): void {\n    config = cardConfigStruct(config);\n    this._useSeverity = !!config.severity;\n    this._config = config;\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _min(): number {\n    return this._config!.number || 0;\n  }\n\n  get _max(): number {\n    return this._config!.max || 100;\n  }\n\n  get _severity(): SeverityConfig | undefined {\n    return this._config!.severity || undefined;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Name\"\n            .value=\"${this._name}\"\n            .configValue=${\"name\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <ha-entity-picker\n            .hass=\"${this.hass}\"\n            .value=\"${this._entity}\"\n            .configValue=${\"entity\"}\n            domain-filter=\"sensor\"\n            @change=\"${this._valueChanged}\"\n            allow-custom-entity\n          ></ha-entity-picker>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            label=\"Unit\"\n            .value=\"${this._unit}\"\n            .configValue=${\"unit\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            type=\"number\"\n            label=\"Minimum\"\n            .value=\"${this._min}\"\n            .configValue=${\"min\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            type=\"number\"\n            label=\"Maximum\"\n            .value=\"${this._max}\"\n            .configValue=${\"max\"}\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._useSeverity !== false}\"\n            @change=\"${this._toggleSeverity}\"\n            >Define Severity?</paper-toggle-button\n          >\n          <div class=\"severity\">\n            <paper-input\n              type=\"number\"\n              label=\"Green\"\n              .value=\"${this._severity ? this._severity.green : 0}\"\n              .configValue=${\"green\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Yellow\"\n              .value=\"${this._severity ? this._severity.yellow : 0}\"\n              .configValue=${\"yellow\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n            <paper-input\n              type=\"number\"\n              label=\"Red\"\n              .value=\"${this._severity ? this._severity.red : 0}\"\n              .configValue=${\"red\"}\n              @value-changed=\"${this._severityChanged}\"\n            ></paper-input>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .severity {\n        display: none;\n        width: 100%;\n        padding-left: 16px;\n        flex-direction: row;\n        flex-wrap: wrap;\n      }\n      .severity > * {\n        flex: 1 0 30%;\n        padding-right: 4px;\n      }\n      paper-toggle-button[checked] ~ .severity {\n        display: flex;\n      }\n    `;\n  }\n\n  private _toggleSeverity(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    this._config.severity = target.checked\n      ? {\n          green: 0,\n          yellow: 0,\n          red: 0,\n        }\n      : undefined;\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _severityChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    const severity = {\n      ...this._config.severity,\n      [target.configValue!]: Number(target.value),\n    };\n    this._config = {\n      ...this._config,\n      severity,\n    };\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card-editor\": HuiGaugeCardEditor;\n  }\n}\n"],"sourceRoot":""}