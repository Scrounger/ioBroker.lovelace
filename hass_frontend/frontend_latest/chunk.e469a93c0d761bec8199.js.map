{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/config/ha-config-section.js","webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/panels/config/dashboard/ha-config-navigation.ts","webpack:///./src/panels/config/dashboard/ha-config-dashboard.js"],"names":["PaperItemBehavior","hostAttributes","role","tabindex","_template","is","behaviors","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","superClass","hass","Object","localize","type","Function","computed","HaCard","this","header","customElements","define","ironIconClass","get","loaded","HaIcon","node","eventName","methodName","super","listen","_iconsetName","narrow","Boolean","isWide","value","classes","properties","hasScrollingRegion","reflectToAttribute","observers","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","style","left","right","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","clientWidth","bind","containerStyle","fixed","condenses","marginTop","paddingTop","connectedCallback","setTimeout","icon","window","getComputedStyle","direction","args","PAGES","page","core","advanced","map","showAdvanced","cloudStatus","component"],"mappings":"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","file":"chunk.e469a93c0d761bec8199.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  /** @override */\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\n\nimport isComponentLoaded from \"../../../common/config/is_component_loaded\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst PAGES: Array<{\n  page: string;\n  core?: boolean;\n  advanced?: boolean;\n}> = [\n  { page: \"core\", core: true },\n  { page: \"server_control\", core: true },\n  { page: \"person\" },\n  { page: \"entity_registry\", core: true },\n  { page: \"area_registry\", core: true },\n  { page: \"automation\" },\n  { page: \"script\" },\n  { page: \"zha\" },\n  { page: \"zwave\" },\n  { page: \"customize\", core: true, advanced: true },\n];\n\n@customElement(\"ha-config-navigation\")\nclass HaConfigNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-card>\n        ${PAGES.map(({ page, core, advanced }) =>\n          (core || isComponentLoaded(this.hass, page)) &&\n          (!advanced || this.showAdvanced)\n            ? html`\n                <a href=${`/config/${page}`}>\n                  <paper-item>\n                    <paper-item-body two-line=\"\">\n                      ${this.hass.localize(`ui.panel.config.${page}.caption`)}\n                      <div secondary>\n                        ${this.hass.localize(\n                          `ui.panel.config.${page}.description`\n                        )}\n                      </div>\n                    </paper-item-body>\n                    <ha-icon-next></ha-icon-next>\n                  </paper-item>\n                </a>\n              `\n            : \"\"\n        )}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-navigation\": HaConfigNavigation;\n  }\n}\n","import \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-menu-button\";\nimport \"../../../components/ha-icon-next\";\n\nimport \"../ha-config-section\";\nimport \"./ha-config-navigation\";\n\nimport isComponentLoaded from \"../../../common/config/is_component_loaded\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\nimport NavigateMixin from \"../../../mixins/navigate-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigDashboard extends NavigateMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n    <style include=\"iron-flex ha-style\">\n      ha-card {\n        overflow: hidden;\n      }\n      .content {\n        padding-bottom: 32px;\n      }\n      ha-card a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n      .promo-advanced {\n        text-align: center;\n        color: var(--secondary-text-color);\n      }\n      .promo-advanced a {\n        color: var(--secondary-text-color);\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region=\"\">\n      <app-header slot=\"header\" fixed=\"\">\n        <app-toolbar>\n          <ha-menu-button hass='[[hass]]' narrow='[[narrow]]'></ha-menu-button>\n          <div main-title=\"\">[[localize('panel.config')]]</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class=\"content\">\n        <ha-config-section is-wide=\"[[isWide]]\">\n          <span slot=\"header\">[[localize('ui.panel.config.header')]]</span>\n          <span slot=\"introduction\">[[localize('ui.panel.config.introduction')]]</span>\n\n          <template is=\"dom-if\" if=\"[[computeIsLoaded(hass, 'cloud')]]\">\n            <ha-card>\n              <a href='/config/cloud' tabindex=\"-1\">\n                <paper-item>\n                  <paper-item-body two-line=\"\">\n                    [[localize('ui.panel.config.cloud.caption')]]\n                    <template is=\"dom-if\" if=\"[[cloudStatus.logged_in]]\">\n                      <div secondary=\"\">\n                        [[localize('ui.panel.config.cloud.description_login', 'email', cloudStatus.email)]]\n                      </div>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[!cloudStatus.logged_in]]\">\n                      <div secondary=\"\">\n                        [[localize('ui.panel.config.cloud.description_features')]]\n                      </div>\n                    </template>\n                  </paper-item-body>\n                  <ha-icon-next></ha-icon-next>\n                </paper-item>\n              </ha-card>\n            </a>\n          </template>\n\n          <ha-card>\n            <a href='/config/integrations/dashboard' tabindex=\"-1\">\n              <paper-item>\n                <paper-item-body two-line>\n                  [[localize('ui.panel.config.integrations.caption')]]\n                  <div secondary>\n                    [[localize('ui.panel.config.integrations.description')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </a>\n            <a href='/config/devices/dashboard' tabindex=\"-1\">\n              <paper-item>\n                <paper-item-body two-line>\n                  [[localize('ui.panel.config.devices.caption')]]\n                  <div secondary>\n                    [[localize('ui.panel.config.devices.description')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </a>\n\n            <a href='/config/users' tabindex=\"-1\">\n              <paper-item>\n                <paper-item-body two-line>\n                  [[localize('ui.panel.config.users.caption')]]\n                  <div secondary>\n                    [[localize('ui.panel.config.users.description')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </a>\n          </ha-card>\n\n          <ha-config-navigation\n            hass=\"[[hass]]\"\n            show-advanced=\"[[showAdvanced]]\"\n          ></ha-config-navigation>\n\n          <template is='dom-if' if='[[!showAdvanced]]'>\n            <div class='promo-advanced'>\n              Missing config options? Enable advanced mode on <a href=\"/profile\">your profile page.</a>\n            </div>\n          </template>\n        </ha-config-section>\n      </div>\n    </app-header-layout>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      isWide: Boolean,\n      cloudStatus: Object,\n      showAdvanced: Boolean,\n    };\n  }\n\n  computeIsLoaded(hass, component) {\n    return isComponentLoaded(hass, component);\n  }\n}\n\ncustomElements.define(\"ha-config-dashboard\", HaConfigDashboard);\n"],"sourceRoot":""}